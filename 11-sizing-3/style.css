/* CSS Normalize */
article,aside,details,figcaption,figure,footer,header,hgroup,nav,section,summary{display:block;}audio,canvas,video{display:inline-block;}audio:not([controls]){display:none;height:0;}[hidden]{display:none;}html{font-family:sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;}a:focus{outline:thin dotted;}a:active,a:hover{outline:0;}h1{font-size:2em;}abbr[title]{border-bottom:1px dotted;}b,strong{font-weight:700;}dfn{font-style:italic;}mark{background:#ff0;color:#000;}code,kbd,pre,samp{font-family:monospace, serif;font-size:1em;}pre{white-space:pre-wrap;word-wrap:break-word;}q{quotes:\201C \201D \2018 \2019;}small{font-size:80%;}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline;}sup{top:-.5em;}sub{bottom:-.25em;}img{border:0;}svg:not(:root){overflow:hidden;}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em;}button,input,select,textarea{font-family:inherit;font-size:100%;margin:0;}button,input{line-height:normal;}button,html input[type=button],/* 1 */
input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer;}button[disabled],input[disabled]{cursor:default;}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0;}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none;}textarea{overflow:auto;vertical-align:top;}table{border-collapse:collapse;border-spacing:0;}body,figure{margin:0;}legend,button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}

/* Box-sizing border-box */
* { -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; }


/* Estilos para hacerlos visibles */
.box {
  color:white;
  font-size: 50px;
  text-align: center;
  text-shadow:4px 4px 0 rgba(0,0,0,0.1);
  padding:10px;
}

/* Colores para cada caja */
.box1 { background:#1abc9c;}
.box2 { background:#3498db;}
.box3 { background:#9b59b6;}
.box4 { background:#34495e;}
.box5 { background:#f1c40f;}
.box6 { background:#e67e22;}
.box7 { background:#e74c3c;}
.box8 { background:#bdc3c7;}
.box9 { background:#2ecc71;}
.box10 { background:#16a085;}


/* Aquí empezamos con Flexbox */
.container {
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  border: 10px solid goldenrod;
  min-height: 100vh;
}

.box {
  /*flex-basis: 500px;*/
  flex-grow: 0;
}

.box3 {
  flex-grow: 5;
}


/*
  NOTA: 
  Resumamos lo visto con algunas definiciones:
  
  'flex': Propiedad definida en los 'flex-items' que establece como
  se reparte el espacio libre disponible para hacer crecer el tamaño
  de cada item, haciéndolos flexibles.

  Si todos los items tienen flex: 1; entonces el espacio sobrante se
  reparte uniformemente entre todos los items, que crecerán hasta 
  ocupar todo el espacio disponible.

  Si algún se define con flex: 2; este tomará el doble de tamaño extra 
  que los items con flex: 1; (Esto siempre es cierto mientras exista
  espacio libre disponible en el container).


  'flex' es un método abreviado que en realidad representa las
  propiedades 'flex-grow', 'flex-shrink' y 'flex-basis'.
  *** Se recomienda utilizar el método abreviado. ***

  x Ej:
    flex: <flex-grow> <flex-shrink> <flex-basis>;
    flex: 10 5 400px;

  - 'flex-basis': Es el tamaño que deben tener los items en caso de
    tener suficiente espacio y cuando no tienen definido un 'flex-grow'.

  - 'flex-grow': Es un índice que indica que proporcion del espacio libre
    disponible en el container debe utilizar para crecer. 
    Por defecto es 0 (no toma espacio libre para crecer).

  - 'flex-shrink': Es un índice que indica que proporción de su tamaño
    debe ceder a los demás ítems cuando el espacio disponible del
    container no alcanza para completar la suma de los 'flex-basis' de
    los items. Es decir, si no hay espacio suficiente para tener el
    tamaño 'flex-basis' como se achica el item en relación a los demás.
    Por defecto es 1 (todos los ítems ceden el mismo espacio extra).



*************************************************************
  Un buen artículo con toda la info:
  https://css-tricks.com/snippets/css/a-guide-to-flexbox/
*************************************************************

*/


